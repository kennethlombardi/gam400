screenWidth = MOAIEnvironment.horizontalResolution screenHeight = MOAIEnvironment.verticalResolutionprint("Starting up on:" .. MOAIEnvironment.osBrand  .. " version:" .. MOAIEnvironment.osVersion)local foo = {};

local name = foo.name();

print( name );
 -- debug lines--MOAIDebugLines.setStyle(MOAIDebugLines.PROP_MODEL_BOUNDS) -- screen stuff initializingif screenWidth == nil then screenWidth = 1280 endif screenHeight == nil then screenHeight = 720 endMOAISim.openWindow("WAT",screenWidth,screenHeight)MOAISim.setStep(1/60)viewport = MOAIViewport.new()viewport:setSize(screenWidth,screenHeight)viewport:setScale(screenWidth,screenHeight)layer = MOAILayer2D.new()layer:setViewport(viewport)MOAIRenderMgr.pushRenderPass(layer)--font junklocal font = MOAIFont.new()font:loadFromTTF ( "arialbd.ttf", "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789,.?!", 12, 163 )local textbox = MOAITextBox.new()textbox:setFont(font)textbox:setTextSize(24)textbox:setRect(-200, -200, 200, 200)textbox:setLoc(0,100)textbox:setAlignment(MOAITextBox.CENTER_JUSTIFY)textbox:setYFlip(true)layer:insertProp(textbox)fpscounter = MOAITextBox.new()fpscounter:setFont(font)fpscounter:setTextSize(24)fpscounter:setRect(-50, -50, 50, 50)fpscounter:setLoc(-550, 300)fpscounter:setAlignment(MOAITextBox.LEFT_JUSTIFY)fpscounter:setYFlip(true)layer:insertProp(fpscounter)ballcounter = MOAITextBox.new()ballcounter:setFont(font)ballcounter:setTextSize(24)ballcounter:setRect(-50, -50, 50, 50)ballcounter:setLoc(550, 300)ballcounter:setAlignment(MOAITextBox.LEFT_JUSTIFY)ballcounter:setYFlip(true)layer:insertProp(ballcounter)world = MOAIBox2DWorld.new()world:setGravity(0,-10)world:setUnitsToMeters(1/100)world:setDebugDrawFlags(MOAIBox2DWorld.DebugDrawShapes)world:start()layer:setBox2DWorld(world)ballc = 0--circlefunction MakeCircle(x, y)	dynbody = world:addBody (MOAIBox2DBody.DYNAMIC)	fixture = dynbody:addCircle(0, 0, 5)	dynbody:setTransform(x,y)	fixture:setFriction(0)	fixture:setRestitution(.01)	dynbody:resetMassData()	ballc = ballc + 1--dynbody:applyAngularImpulse(2)	return bodyend--edgesscreen = {	--bottom	-600, -300,	 600, -300,	--right	 600, -300,	 600,  300,	--top	 600,  300,	-600,  300,	--left	-600,  300,	-600, -300,		--goal	-400, 30,	-400, 80,	-400, 80,	-350, 80,	-400, 30,	-350, 30,		300, 300,	300, 250,		300, 30,	350, 30,	}staticbody= world:addBody(MOAIBox2DBody.STATIC)fixture2 = staticbody:addEdges(screen)--image junkslideNum = 1slides = {	"slide01.png",	"slide02.png",	"slide03.png",	"slide04.png",	"slide05.png",	"slide06.png"}	image = MOAIGfxQuad2D.new()image:setTexture("slide01.png")image:setRect(-640,-360,640,360)function ChangeSlide()	image:setTexture(slides[slideNum])endprop = MOAIProp2D.new()prop:setDeck(image)layer:insertProp(prop)slideOver = falsegameOver = falselastX = 0lastY = -10gyroscope = truefunction angle ( x2, y2 )	return math.atan2 ( y2, x2) * ( 180 / math.pi )endfunction RotateArrow(ang)		prop:setRot(ang)endfunction normalize(x, y)	mag = math.sqrt(x*x+y*y)	return x/mag, y/magendcurrAngle = 0destAngle = 0mainThread = MOAIThread.new()mainThread:run(	function()				currFrame = MOAISim.getElapsedFrames()				while not slideshowOver do			coroutine.yield()							if MOAIInputMgr.device.pointer then							if MOAIInputMgr.device.mouseLeft:down() then					wx,wy = layer:wndToWorld(MOAIInputMgr.device.pointer:getLoc())					if wx < 0 then						if slideNum > 1 then							slideNum = slideNum - 1						end					else						if slideNum < table.getn(slides) then							slideNum = slideNum + 1						else							slideshowOver = true						end					end					ChangeSlide()				end							else --touch and gyro				MOAIInputMgr.device.touch:setCallback (										function ( eventType, idx, x, y, tapCount )												if eventType == MOAITouchSensor.TOUCH_DOWN then							wx,wy = (layer:wndToWorld(x,y))							if wx < 0 then								if slideNum > 1 then									slideNum = slideNum - 1								end							else								if slideNum < table.getn(slides) then									slideNum = slideNum + 1								else									slideshowOver = true								end							end							ChangeSlide()						end					end				)						end		end		layer:removeProp(prop)				while not gameOver do			coroutine.yield()						if MOAIInputMgr.device.pointer then							if MOAIInputMgr.device.mouseLeft:down() then					MakeCircle(layer:wndToWorld(MOAIInputMgr.device.pointer:getLoc()))					--lastX, lastY = layer:wndToWorld( MOAIInputMgr.device.pointer:getLoc())					--destAngle = angle(lastX, lastY) + 90									end							else --touch and gyro				MOAIInputMgr.device.touch:setCallback (										function ( eventType, idx, x, y, tapCount )												if eventType == MOAITouchSensor.TOUCH_DOWN then							MakeCircle(layer:wndToWorld(x,y))							--lastX, lastY = layer:wndToWorld(x,y)							--destAngle = angle(lastX, lastY) + 90						end					end				)							MOAIInputMgr.device.level:setCallback(					function(x, y, z)						lastX = x						lastY = y						destAngle = angle(lastX, lastY)					end				)			end						local delta = destAngle - currAngle			if delta > 180 then				delta = delta - 360			end			if delta < -180 then							delta = 360 + delta			end			currAngle = (currAngle + delta * .25) % 360			lastX, lastY = normalize(lastX, lastY)			gravScale = 100									world:setGravity (lastY * gravScale, -lastX*gravScale)							--dynbody:setAwake(true)						--RotateArrow(currAngle)									textbox:setString("Gravity\n" .. "X " .. lastY*10 .. "\nY " .. lastX*10 )			fpscounter:setString("FPS: " .. 1.0/(MOAISim.getElapsedTime()-currFrame))			ballcounter:setString("NumBalls: " .. ballc)			currFrame = MOAISim.getElapsedTime()		end					end)